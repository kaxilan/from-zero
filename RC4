#include<iostream>
#include<bitset>
#include<string>
using namespace std;
void s_box(int* s,int* k);
void swap(int& x, int& y);
int* keyStream(int* s,int* k,int len);
int* jiaMi_jieMi(int* m, int* k,int* miWen,int len);
int toHex(char& a);
/*输入十六进制明文：11223344556677889900AABBCCDDEEFF    
输入十六进制密钥：13579BDF02468ACE1234567890ABCDEF 
*/
int main()
{
	string a,k;
	/*cin >> a;
	cin >> k;*/
	a = "11223344556677889900AABBCCDDEEFF";
	k = "13579BDF02468ACE1234567890ABCDEF";
	int t[32],key[32];
	for (int i = 0; i < 32; i++)
	{
		t[i] = toHex(a[i]);
		key[i] = toHex(k[i]);
	}
	int ks[256];
	int s[256];
	for (int i = 0; i < 256; i++)
	{
		ks[i] = key[i % 32];
		s[i] = i;
	}
	s_box(s, ks);
	int kstream[32];
    keyStream(s,kstream,32);
	int miWen[32];
	jiaMi_jieMi(t,kstream,miWen,32);
	for (int i = 0; i < 32; i++)
		cout<<hex<<miWen[i];
	cout << endl;
	int mingwen[32];
	jiaMi_jieMi(kstream, miWen, mingwen, 32);
	for (int i = 0; i < 32; i++)
		cout << hex << mingwen[i];
	cout << endl;
	return 0;
}

void s_box(int* s,int* k)
{
	int i, j = 0;
	for (i = 0; i < 256; i++)
	{
		j = (j + s[i] + k[i]) % 256;
		swap(s[i], s[j]);
	}
}

void swap(int& x, int& y)
{
	int cur;
	cur = x;
	x = y;
	y = cur;
}

int* keyStream(int* s,int* k, int len)
{
	int t;
	int i = 0, j = 0;
	for (int count = 0; count < len; count++)
	{
		i = (i + 1) % 256;
		j = (j + s[i]) % 256;
		swap(s[i], s[j]);
		t = (s[i], s[j]) % 256;
		k[count] = s[t];
	}
	return k;
}

int* jiaMi_jieMi(int* m, int* k,int* miWen,int len)
{
	for (int i = 0; i < len; i++)
	{
		miWen[i] = m[i] ^ k[i];
	}
	return miWen;
}

int toHex(char& ch)
{
	if ('0' <= ch &&ch <= '9')
	{
		return ((int)ch - 48);
	}
	else
		if ('A' <= ch &&ch <= 'Z')
	{
		return (10 + ((int)ch - 65));
	}
}
